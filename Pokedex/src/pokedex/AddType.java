package pokedex;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import javax.swing.JOptionPane;


public class AddType extends javax.swing.JFrame {

    /**
     * Creates new form AddType
     */
    Connection con;
    Statement statement;
    PreparedStatement prepStatement;
    ResultSet rs;

    public AddType(myDBCon connect) {
        initComponents();
        con = connect.getCon();
        // center form in screen 
        this.setLocationRelativeTo(null);
        // set all error labels to invisible
        lblTypeNameError.setVisible(false);

        //populate generation combo box 
        
        cmbGen.addItem("I");
        cmbGen.addItem("II");
        cmbGen.addItem("III");
        cmbGen.addItem("IV");
        cmbGen.addItem("V");
        cmbGen.addItem("VI");
        cmbGen.addItem("VII");
        cmbGen.addItem("VIII");
        
        try{
            statement = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
        //populate powerful_against combo box
            rs = statement.executeQuery("SELECT name FROM type");
            while (rs.next()) {
                cmbPwrAgnst.addItem(rs.getString("name"));
            }
            //exists incase the type desiered was not in the table, then the type can be added and this value can me modified in update/delete menu
            // Does not work
            cmbPwrAgnst.addItem("null");
        }
        catch (SQLException e) {
            javax.swing.JLabel label = new javax.swing.JLabel("SQL Error - Display selected empno.");
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }

       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTypeName = new javax.swing.JTextField();
        cmbGen = new javax.swing.JComboBox<>();
        btnAddNewType = new javax.swing.JButton();
        lblTypeNameError = new javax.swing.JLabel();
        cmbPwrAgnst = new javax.swing.JComboBox<>();
        lblPwrAgnstError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Pokemon Type");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 222, 0));
        jLabel1.setText("Add New Type");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Type Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Powerful against:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Generation added:");

        txtTypeName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTypeName.setPreferredSize(new java.awt.Dimension(72, 28));

        cmbGen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAddNewType.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnAddNewType.setText("Add Type!");
        btnAddNewType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewTypeActionPerformed(evt);
            }
        });

        lblTypeNameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblTypeNameError.setForeground(new java.awt.Color(255, 0, 0));
        lblTypeNameError.setText("error label");

        cmbPwrAgnst.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblPwrAgnstError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblPwrAgnstError.setForeground(new java.awt.Color(255, 0, 0));
        lblPwrAgnstError.setText("error label");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbPwrAgnst, 0, 211, Short.MAX_VALUE)
                            .addComponent(txtTypeName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPwrAgnstError, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTypeNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddNewType, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(183, 183, 183))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(lblTypeNameError))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPwrAgnst, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lblPwrAgnstError))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnAddNewType, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    void clearErrorLabels() {
       
        lblTypeNameError.setText("");
        lblTypeNameError.setVisible(false);
        lblPwrAgnstError.setText("");
        lblPwrAgnstError.setVisible(false);
        
    }

    boolean isValidData() {

        clearErrorLabels();
        boolean result = true;
       
        //verifing that name isnt empty or exceeds char limit
        if (txtTypeName.getText().trim().isEmpty() || (txtTypeName.getText().trim().length() > 15)) {
            if (txtTypeName.getText().trim().isEmpty()) {
                lblTypeNameError.setText("Invalid. Cannot be empty.");
            } else if ((txtTypeName.getText().trim().length() > 15)) {
                lblTypeNameError.setText("Invalid. Must be < 15 chars.");
            }

            lblTypeNameError.setVisible(true);
            result = false;
        }
        
       // since name is a primary key, we verify that the new type to be added doesn't already exist in table
       try {
           
            statement = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = statement.executeQuery("SELECT * FROM type WHERE name = '" + txtTypeName.getText().trim().toUpperCase() + "'");
            if (rs.isBeforeFirst()) {
                lblTypeNameError.setText("Invalid. Type already exists in table.");
                lblTypeNameError.setVisible(true);
                result = false; 
              
            }
            
            rs.close();
            statement.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
       

        //verifying that the powerful against value is not equal to the name value
         if (cmbPwrAgnst.getSelectedItem().toString().equals(txtTypeName.getText().trim())){
             lblPwrAgnstError.setText("Invalid. Type cannot be powerful against itself.");
             lblPwrAgnstError.setVisible(true);
             result = false;
         }

       

        return result;
    }

    void clearInputBoxes() {
        
        txtTypeName.setText("");
        cmbGen.setSelectedIndex(0);
        cmbPwrAgnst.setSelectedIndex(0);
    }

    private void btnAddNewTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewTypeActionPerformed
        // TODO add your handling code here:

        try {
            // make the result set scrolable forward/backward updatable
            statement = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            if (isValidData()) {
                prepStatement = con.prepareStatement("INSERT INTO Type (name, generation, powerful_against) VALUES (? , ? , ?)");
                prepStatement.setString(1, txtTypeName.getText().toUpperCase());
                prepStatement.setString(2, cmbGen.getSelectedItem().toString());
                prepStatement.setString(3 , cmbPwrAgnst.getSelectedItem().toString().toUpperCase());
                
                int result = prepStatement.executeUpdate();
                if (result > 0) {

                    javax.swing.JLabel label = new javax.swing.JLabel("New Type added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);

                    clearInputBoxes();
                } else {
                    // check validation errors 
                }

                rs.close();
                statement.close();
                prepStatement.close();
            } else {

                javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);

            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error adding new type.");
        }
    }//GEN-LAST:event_btnAddNewTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewType;
    private javax.swing.JComboBox<String> cmbGen;
    private javax.swing.JComboBox<String> cmbPwrAgnst;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblPwrAgnstError;
    private javax.swing.JLabel lblTypeNameError;
    private javax.swing.JTextField txtTypeName;
    // End of variables declaration//GEN-END:variables
}
